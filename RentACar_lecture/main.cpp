//
//  main.cpp
//  RentACar
//
//  Created by Rado on 19.01.24.
//

/* Да се разработи малка система за фирма за коли под наем.
 За всяка кола се съхранява информация за: марка, модел, вид, цвят, номер на шасито, номе на колата и разход на гориво.
 (Под вид се разбира седан, комби, хечбек, ...).
 Имаме два вида коли - фамилни и луксозни.
 Фамилните коли имат:
 такса за ползване - в лева на ден. изминатото разстояние от клиента.
 Луксозните коли имат:
 такса за ползване - в лева на ден. изминатото разстояние от клиента.
 такса „дольнителни екстри" •
 Да се реализират класове описващи колите.
 Да се реализират функции (в подходящите класове) за определяне цената, която клиента трябва да плати.
 За фамилните коли цената се определя от произведението на: такса за ползване Х коефицент
 За фамилните коли коефицент „изминато разстояние" се определя по следния начин: ако изминатото разстояние е по-малко от 500 километра коефицента е 0.7; ако изминатото разстояние е по-голямо или равно на 500 километра, то коефицента е 0,4. За луксозните коли този коефицент се определя така: ако изминатото разстояние e по-малко от 200 километра коефицента е 0.6; ако изминатото разстояние е по-голямо или равно на 200 километра, то коефицента е 0,4. Коефицента за лукс е три типа 100 лева (шампанско), 50 лева (вино) и 40 лева (шоколад) .
 Да се напише примерно приложение за тест на разработените класове и техните функции, като трябва да се създадат няколко обекта от всеки тип и да се съхранят в подходяща структура.*/

#include <iostream>
#include <vector>
#include <string>
#include "Car.hpp"
#include "LuxuryCar.hpp"
#include "FamilyCar.hpp"
using namespace std;

int main(int argc, const char * argv[]) {
    
    // insert code here...
    
    vector<Car*> carsVect;

    FamilyCar familyCar("Toyota", "Supra", "Coupe", "Orange", "1234", "SA1991MA", 25.0, 20.0, 200);
    carsVect.push_back(&familyCar);
    LuxuryCar luxuryCar("Honda", "NSX", "Coupe", "Red", "5678", "SA1991MA", 19.0, 100.0, 200, "Champagne");
    carsVect.push_back(&luxuryCar);
    
    for (auto& car : carsVect) {
        cout << "Car : " << car -> brand << " /Car model: " << car -> model << " /Car type: " << car -> type << " /Car color: "<< car -> color << " /Car Chasie: " << car -> chasieNumber << " /Car Reg Number: " << car -> carNumber << " /Car fuel consumtion: " << car -> fuelConsumption << endl;
        cout << "Rental Price for 200 km passed range ->  " << car-> rentCost() << " $ " << endl;
        cout << "----------------------------------------------------------------------" << endl;
    }
    
    
    return 0;
}
